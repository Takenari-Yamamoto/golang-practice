package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/Takenari-Yamamoto/golang-study/generated/graph"
	"github.com/Takenari-Yamamoto/golang-study/generated/graph/model"
)

// Tasks is the resolver for the tasks field.
func (r *queryResolver) Tasks(ctx context.Context) ([]*model.Task, error) {
	tasks, err := r.TaskService.ListAll()
	if err != nil {
		return nil, fmt.Errorf("failed to get tasks: %w", err)
	}

	var tasksModel []*model.Task
	for _, task := range tasks {
		tasksModel = append(tasksModel, &model.Task{
			ID:          task.ID,
			Title:       task.Title,
			Description: &task.Description,
		})
	}

	return tasksModel, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
