package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"
	"github/Takenari-Yamamoto/golang-practice/gql-practice/graph/model"
	"github/Takenari-Yamamoto/golang-practice/gql-practice/repository"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	res := repository.ListAllTodos()
	var todos []*model.Todo
	for _, v := range res {
		user := repository.GetUserByID(v.UserId)
		todos = append(todos, &model.Todo{
			ID:   v.ID,
			Text: v.Text,
			Done: v.Done,
			User: &model.User{
				ID:   user.ID,
				Name: user.Name,
			},
		})
	}
	return todos, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
